package com.mx.mascotas.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mx.mascotas.model.Mascotas;
import com.mx.mascotas.repository.MascotasRepository;

@Service
public class MascotasService {

	@Autowired
	MascotasRepository mascDao;

	public List<Mascotas> listar() {
		List<Mascotas> listaMascotas = new ArrayList<>();
		listaMascotas = mascDao.findAll();
		return listaMascotas;
	}
/*
	public String guardar(Mascotas mascotas) {
		if (mascDao.findAll().isEmpty()) {
			mascDao.save(mascotas);
			return "OBJETO GUARDADO";
		}

		else {
			for (Mascotas i : mascDao.findAll()) {
				if (mascotas.getIdMascota() != i.getIdMascota()) {
					mascDao.save(mascotas);
					return "OBJETO GUARDADO";
				} else {
					return "OBJETO YA EXISTENTE";
				}
			}
		}
		return null;
	}
	*/
	public String guardar(Mascotas mascotas) {
		if (mascDao.existsById(mascotas.getIdMascota())) {
			return "ID YA EXISTENTE";
		} else {
			mascDao.save(mascotas);
			return "DATO INEXISTENTE";
		}
	}
	
	

	public String editar(Mascotas mascotas) {
		if (mascDao.existsById(mascotas.getIdMascota())) {
			mascDao.save(mascotas);
			return "DATO EDITADO";
		} else {
			return "DATO INEXISTENTE";
		}
	}

	public Object buscar(Mascotas mascotas) {
		if(mascDao.findAll().contains(mascotas.getIdMascota())) {
		Mascotas buscarMascota = mascDao.findById(mascotas.getIdMascota()).orElse(null);
		return buscarMascota;
		}
		else
			return "MASCOTA SIN REGISTRO";
		
	}

	public String borrar(Mascotas mascotas) {
		if(mascDao.existsById(mascotas.getIdMascota())) {
			mascDao.delete(mascotas);
			return "DATO BORRADO";
		}
		else {
			return "SIN DATO A BORRAR";
		}
	}

}
